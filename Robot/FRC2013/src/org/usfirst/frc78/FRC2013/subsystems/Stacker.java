// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc78.FRC2013.subsystems;
import org.usfirst.frc78.FRC2013.RobotMap;
import org.usfirst.frc78.FRC2013.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Stacker extends Subsystem {
    private final static double UPPER1_GATE_OPEN = 0.4;
    private final static double UPPER1_GATE_CLOSE= 0.0;
    private final static double ALL_GATE_OPEN = 0.6;
    private final static double ALL_GATE_CLOSE= 1.0;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Servo lowerGate1 = RobotMap.stackerLowerGate1;
    Servo lowerGate2 = RobotMap.stackerLowerGate2;
    Servo lowerGate3 = RobotMap.stackerLowerGate3;
    Servo upperGate1 = RobotMap.stackerUpperGate1;
    Servo upperGate2 = RobotMap.stackerUpperGate2;
    Servo upperGate3 = RobotMap.stackerUpperGate3;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void openUpperGate() {
        upperGate1.set(UPPER1_GATE_OPEN);
        upperGate2.set(ALL_GATE_OPEN);
        upperGate3.set(ALL_GATE_OPEN);
    }
    public void closeUpperGate() {
        upperGate1.set(UPPER1_GATE_CLOSE);
        upperGate2.set(ALL_GATE_CLOSE);
        upperGate3.set(ALL_GATE_CLOSE);
    }
    public void openLowerGate() {
        lowerGate1.set(ALL_GATE_OPEN);
        lowerGate2.set(ALL_GATE_OPEN);
        lowerGate3.set(ALL_GATE_OPEN);
    }
    public void closeLowerGate() {
        lowerGate1.set(ALL_GATE_CLOSE);
        lowerGate2.set(ALL_GATE_CLOSE);
        lowerGate3.set(ALL_GATE_CLOSE);
    }
    public void init() {
        closeLowerGate();
        openUpperGate();
    }
}
