// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc78.FRC2013.subsystems;
import org.usfirst.frc78.FRC2013.RobotMap;
import org.usfirst.frc78.FRC2013.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;
import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc78.FRC2013.Robot;
/**
 *
 */
public class Shooter extends Subsystem {
    private final static double FRONT_SHOOT_SPEED = 1.0;    // TODO
    private final static double REAR_SHOOT_SPEED = 0.5;    // TODO
    private final static double TRIGGER_FIRE_POS = 180.0;    // TODO
    private final static double TRIGGER_COCK_POS = 0.0;    // TODO
    private final static double TILT_LOAD_POS = 0.0;    // TODO
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController frontMotor = RobotMap.shooterFrontMotor;
    SpeedController rearMotor = RobotMap.shooterRearMotor;
    SpeedController triggerMotor = RobotMap.shooterTriggerMotor;
    DigitalInput triggerStop = RobotMap.shooterTriggerStop;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ShooterWithJoystick());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    private void move(double front, double rear) {
        frontMotor.set(front);
        rearMotor.set(rear);
    }
    public void stopShooterWheels() {
//        frontPID.reset();
//        rearPID.reset();
        move(0.0, 0.0);
    }
    public void startShooterWheels() {
//        frontPID.enable();
//        rearPID.enable();
//       frontPID.setSetpoint(FRONT_SHOOT_SPEED);
//       rearPID.setSetpoint(REAR_SHOOT_SPEED);
        move(-1.0, -1.0);
    }
    public void JoystickShooter() {
        double speed = Robot.oi.getShooterWheelSpeed();
        move(speed, speed);
    }
    // trigger
    public boolean isTriggerAtStop() {
        return triggerStop.get();
    }
    public void stopTriggerMotor() {
        triggerMotor.set(0.0);
    }
    public void moveTriggerMotor() {
        triggerMotor.set(1.0);
    }
}
